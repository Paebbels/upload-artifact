# The MIT License (MIT)
#
# Copyright ¬© 2024 The pyTooling Authors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the ‚ÄúSoftware‚Äù), to deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED ‚ÄúAS IS‚Äù, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
name: Verification of Preserving Artifact Upload

on:
  push:
  workflow_dispatch:

jobs:
  Build:
    name: ${{ matrix.os.icon }} Build 1 on ${{ matrix.os.name }} - Upload artifact
    runs-on: ${{ matrix.os.image }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
          - {'icon': 'üçè', 'name': 'macOS',   'image': 'macos-14'    }
          - {'icon': 'ü™ü', 'name': 'Windows', 'image': 'windows-2022'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - uses: ./.github/actions/create-files

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-release'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-release
          path: |
            document1.txt
            *.log
            bin/*.py
            lib/

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-release'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-release
          path: |
            document1.txt
            *.log
            bin/*.py
            lib/

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-lib'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-lib
          working-directory: lib
          path: |
            **/*.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-single-file'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-single-file
          path: |
            document1.txt

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-single-file'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-single-file
          path: |
            document1.txt

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-single-file-in-directory'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-single-file-in-directory
          path: |
            bin/program.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-single-file-in-directory'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-single-file-in-directory
          path: |
            bin/program.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-double-file-in-directory'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-double-file-in-directory
          path: |
            bin/program.py
            bin/tool.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-double-file-in-directory'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-double-file-in-directory
          path: |
            bin/program.py
            bin/tool.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-triple-file-in-directory'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-triple-file-in-directory
          path: |
            lib/common.py
            lib/gui/main.py
            lib/gui/dialog.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-triple-file-in-directory'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-triple-file-in-directory
          path: |
            lib/common.py
            lib/gui/main.py
            lib/gui/dialog.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-double-file-in-deep-directory'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-double-file-in-deep-directory
          path: |
            lib/gui/main.py
            lib/gui/dialog.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-double-file-in-deep-directory'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-double-file-in-deep-directory
          path: |
            lib/gui/main.py
            lib/gui/dialog.py

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-single-directory'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-single-directory
          path: |
            bin

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-single-directory'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-single-directory
          path: |
            bin

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-double-directory'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-double-directory
          path: |
            bin
            lib

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-double-directory'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-double-directory
          path: |
            bin
            lib

      - name: üì§ Upload artifact '${{ matrix.os.name }}-github-unpredictable-wildcard'
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-github-unpredictable-wildcard
          path: |
            lib/gui/main.py
            lib/gui/dialog.py
            *.foo

      - name: üì§ Upload artifact '${{ matrix.os.name }}-pyTooling-unpredictable-wildcard'
        uses: pyTooling/upload-artifact@dev
        continue-on-error: true
        with:
          name: ${{ matrix.os.name }}-pyTooling-unpredictable-wildcard
          path: |
            lib/gui/main.py
            lib/gui/dialog.py
            *.foo

  Verify-0:
    name: ${{ matrix.os.icon }} Verify artifact content on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
          - {'icon': 'üçè', 'name': 'macOS',   'image': 'macos-14'    }
          - {'icon': 'ü™ü', 'name': 'Windows', 'image': 'windows-2022'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì• Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-github-release

      - name: üîé Inspect downloaded artifact content
        run: |
          set +e

          ANSI_LIGHT_RED=$'\x1b[91m'
          ANSI_LIGHT_GREEN=$'\x1b[92m'
          ANSI_NOCOLOR=$'\x1b[0m'

          printf "%s\n" "List directory content"
          ls -lAh .
          printf "%s\n" "----------------------------------------"

          printf "%s" "Does tarball exist ... "
          if [[ ! -f __pyTooling_upload_artifact__.tar ]]; then
            printf "%s\n" "${ANSI_LIGHT_RED}[FAILED]${ANSI_NOCOLOR}"
            printf "%s\n" "${ANSI_LIGHT_RED}Artifact doesn't contain a tar file named '__pyTooling_upload_artifact__.tar'.${ANSI_NOCOLOR}"
            exit 1
          else
            printf "%s\n" "${ANSI_LIGHT_GREEN}[OK]${ANSI_NOCOLOR}"
          fi

      - name: üì¶ Extract tarball
        run: |
          set +e

          ANSI_LIGHT_RED=$'\x1b[91m'
          ANSI_LIGHT_GREEN=$'\x1b[92m'
          ANSI_NOCOLOR=$'\x1b[0m'

          printf "%s" "Extracting tarball ... "
          tar -xf __pyTooling_upload_artifact__.tar
          if [[ $? -ne 0 ]]; then
            printf "%s\n" "${ANSI_LIGHT_RED}[FAILED]${ANSI_NOCOLOR}"
          else
            printf "%s\n" "${ANSI_LIGHT_GREEN}[OK]${ANSI_NOCOLOR}"
          fi

      - name: üîé Inspect extracted tarball
        if: runner.os != 'macOS'
        run: |
          tree .

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        with:
          files: |
            document1.txt
            analysis.log
            build.log
            bin/program.py
            lib/common.py

      - name: üìã Verify file permissions
        uses: ./.github/actions/file-is-executable
        with:
          files: |
            bin/program.py
            lib/common.py

  Inspect-1:
    name: ${{ matrix.os.icon }} Single file ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì• Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-single-file

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content
        uses: ./.github/actions/check-directory-content
        with:
          files: |
            document1.txt

  Inspect-2:
    name: ${{ matrix.os.icon }} Inspect single file in directory ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-single-file-in-directory

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            program.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            bin/program.py

  Inspect-3:
    name: ${{ matrix.os.icon }} Inspect double file in directory ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-double-file-in-directory

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            program.py
            tool.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            bin/program.py
            bin/tool.py

  Inspect-4:
    name: ${{ matrix.os.icon }} Inspect triple file in directory ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-triple-file-in-directory

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            common.py
            gui/main.py
            gui/dialog.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            lib/common.py
            lib/gui/main.py
            lib/gui/dialog.py

  Inspect-5:
    name: ${{ matrix.os.icon }} Inspect double file in deep directory ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-double-file-in-deep-directory

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            main.py
            dialog.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            lib/gui/main.py
            lib/gui/dialog.py

  Inspect-6:
    name: ${{ matrix.os.icon }} Inspect single directory ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-single-directory

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            program.py
            tool.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            bin/program.py
            bin/tool.py

  Inspect-7:
    name: ${{ matrix.os.icon }} Inspect double directory ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-double-directory

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            bin/program.py
            bin/tool.py
            lib/common.py
            lib/shared.py
            lib/gui/main.py
            lib/gui/dialog.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            bin/program.py
            bin/tool.py
            lib/common.py
            lib/shared.py
            lib/gui/main.py
            lib/gui/dialog.py

  Inspect-8:
    name: ${{ matrix.os.icon }} Unpredictable Wildcard ${{ matrix.task.action }} on ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.image }}
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'inspect', 'artifact': 'github', 'action': 'actions/upload-artifact'}
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-unpredictable-wildcard

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'inspect'
        with:
          files: |
            lib/gui/main.py
            lib/gui/dialog.py

      - name: üìã Verify extracted tarball content
        uses: ./.github/actions/check-directory-content
        if: matrix.task.name == 'verify'
        with:
          files: |
            lib/gui/main.py
            lib/gui/dialog.py

  Verify-9:
    name: Verify lib directory
    runs-on: ubuntu-24.04
    needs:
      - Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - {'icon': 'üêß', 'name': 'Ubuntu',  'image': 'ubuntu-24.04'}
        task:
          - {'name': 'verify' , 'artifact': 'pyTooling', 'action': 'pyTooling/upload-artifact'}

    steps:
      - name: ‚è¨ Checkout repository to use local actions
        uses: actions/checkout@v4

      - name: üì•  Download artifact uploaded via '${{ matrix.task.action }}'
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.os.name }}-${{ matrix.task.artifact }}-lib

      - name: üîé Extract tarball
        if: matrix.task.name == 'verify'
        run: |
          tar -xf "__pyTooling_upload_artifact__.tar"
          rm __pyTooling_upload_artifact__.tar

      - name: üîé Inspect directory
        run: |
          tree .

      - name: üìã Verify artifact content downloaded via 'actions/download-artifact'
        uses: ./.github/actions/check-directory-content
        with:
          files: |
            common.py
            shared.py
            gui/dialog.py
            gui/main.py
