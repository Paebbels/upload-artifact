name: Create test files
description: Create an artificial directory and file structure

runs:
  using: composite
  steps:
    - name: ðŸ–‰ Create some artificial file and directory structures
      shell: bash
      run: |
        printf "%s\n" "Root"
        printf "%s\n" "Document 1 $(date --utc '+%d.%m.%Y - %H:%M:%S')"   > document1.txt
        printf "%s\n" "Analysis log $(date --utc '+%d.%m.%Y - %H:%M:%S')" > analysis.log
        printf "%s\n" "Build log $(date --utc '+%d.%m.%Y - %H:%M:%S')"    > build.log

        printf "%s\n" "bin/"
        mkdir -p bin
        printf "%s\n" "Program $(date --utc '+%d.%m.%Y - %H:%M:%S')"      > bin/program.py
        chmod u+x bin/program.py
        printf "%s\n" "Tool $(date --utc '+%d.%m.%Y - %H:%M:%S')"         > bin/tool.py
        chmod g+x bin/tool.py

        printf "%s\n" "lib/"
        mkdir -p lib
        printf "%s\n" "Library 1 $(date --utc '+%d.%m.%Y - %H:%M:%S')"    > lib/common.py
        chmod +x lib/common.py
        printf "%s\n" "Library 2 $(date --utc '+%d.%m.%Y - %H:%M:%S')"    > lib/shared.py
        chmod +x lib/shared.py

        printf "%s\n" "lib/gui/"
        mkdir -p lib/gui
        printf "%s\n" "Library 3 $(date --utc '+%d.%m.%Y - %H:%M:%S')"    > lib/gui/main.py
        chmod +x lib/gui/main.py
        printf "%s\n" "Library 4 $(date --utc '+%d.%m.%Y - %H:%M:%S')"    > lib/gui/dialog.py
        chmod +x lib/gui/dialog.py

    - name: ðŸ”Ž Inspect directory structure
      if: runner.os != 'macOS' && runner.os != 'Windows'
      shell: bash
      run: |
        tree .
